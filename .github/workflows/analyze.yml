# Copyright (C) 2025 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Perfetto CI
on:
  # 1. continuous
  schedule:
    # Run every 6 hours
    - cron: "0 */6 * * *"

  # 2. postsubmit
  push:
    branches:
      - main

  # 3. presubmit
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - dev/**/*

# If a new commit is pushed, cancel previous jobs for the same PR / branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if the change is UI/docs only (skip linux/android tests)
        run: |
          if !(git diff --name-only HEAD^1 HEAD | egrep -qv '^(ui|test/data/ui-screenshots)/'); then
          echo "UI_ONLY_CHANGE=1" >> $GITHUB_OUTPUT
          else
          echo "UI_ONLY_CHANGE=0" >> $GITHUB_OUTPUT
          fi

  linux:
    needs: analyze
    if: needs.analyze.outputs.UI_ONLY_CHANGE == '0'
    uses: ./.github/workflows/linux-tests.yml

  android:
    needs: analyze
    if: needs.analyze.outputs.UI_ONLY_CHANGE == '0'
    uses: ./.github/workflows/android-tests.yml

  ui:
    needs: analyze
    uses: ./.github/workflows/ui-tests.yml

  bazel:
    needs: analyze
    if: needs.analyze.outputs.UI_ONLY_CHANGE == '0'
    uses: ./.github/workflows/bazel-tests.yml

  fuzzer:
    needs: analyze
    if: needs.analyze.outputs.UI_ONLY_CHANGE == '0'
    uses: ./.github/workflows/fuzzer-tests.yml

  repo-checks:
    needs: analyze
    if: needs.analyze.outputs.UI_ONLY_CHANGE == '0'
    uses: ./.github/workflows/repo-checks.yml

  # When creating stacked PRs, ensure that PRs are based on main (or another
  # branch) before submitting. This avoid to accidentally merge PR2 onto PR1,
  # if both PR1 and PR2 are opened, which is very confusing when dealing with
  # stacked changes.
  pr-branch-check:
    if: startsWith(github.base_ref, 'dev/')
    runs-on: self-hosted
    steps:
      - name: Prevent accidental merge PRs into dev branches
        run: |
          echo "‚ùå You are trying to merge the a PR ${{ github.ref }} on top \
              of another one (${{ github.base_ref }})."
          echo "When working with stacked changes you need to first land the \
              upstream PR, then click on the button that suggests to set main \
              as merge base."
          exit 1
