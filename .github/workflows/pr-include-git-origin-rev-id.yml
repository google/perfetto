# Copyright (C) 2025 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When creating stacked PRs, ensure that PRs are based on main (or another
# branch) before submitting. This avoid to accidentally merge PR2 onto PR1,
# if both PR1 and PR2 are opened, which is very confusing when dealing with
# stacked changes.

name: Autofill PR Body with Footer

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - dev/copybara/chromium_tmp

permissions:
  pull-requests: write  # Required to edit the PR body
  contents: read  # Required to read commit messages

jobs:
  autofill:
    runs-on: ubuntu-latest
    steps:
      - name: Get commit message
        id: get_commit_message
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            // Get the last commit in the PR.
            const lastCommit = commits[commits.length - 1];
            return lastCommit.commit.message;

      - name: Append GitOrigin-RevId to PR body
        id: append_git_origin_rev_id
        uses: actions/github-script@v6
        with:
          script: |
            const commitMessage = `${{ steps.get_commit_message.outputs.result }}`;
            const prBody = `${{ github.event.pull_request.body }}`;
            const footerRegex = /GitOrigin-RevId: \w+/;

            const match = commitMessage.match(footerRegex);
            if (!match) {
              console.log("No GitOrigin-RevId footer found in the commit message.");
              return;
            }

            const footer = match[0];
            console.log(`Found footer: ${footer}`);

            // Check if the PR body already contains the footer
            if (prBody.includes(footer)) {
              console.log("PR body already contains the correct footer.");
              return;
            }

            // Append the footer to the PR body
            const newBody = prBody.trim() + `\n\n${footer}`;

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: newBody,
            });
