package: "perfetto.flags"
container: "system"

flag {
  name: "save_all_traces_in_bugreport"
  namespace: "perfetto"
  description: "This flag controls whether dumpstate invokes perfetto --save-for-bugreport (when disabled, old behavrior) or --save-all-for-bugreport (when enabled, new behavior). save-all serializes all the eligible active traces, rather than only the one with the highest bugreport score"
  bug: "321196572"
}
flag {
  name: "test_read_only_flag"
  namespace: "perfetto"
  description: "A test flag for verifying that support for read-only flags in Perfetto works correctly."
  bug: "433766726"
  is_fixed_read_only: true
}
flag {
  name: "use_murmur_hash_for_flat_hash_map"
  namespace: "perfetto"
  description: "Controls whether we will use the new MurmurHash implementation for FlatHashMap. false = use FNV1A (used for ~5 years) true = use MurmurHash"
  bug: "433766726"
  is_fixed_read_only: true
}
flag {
  name: "ftrace_clear_offline_cpus_only"
  namespace: "perfetto"
  description: "Controls whether we will optimize the ClearTrace() function to only clear the buffers for offline CPUs instead of all."
  bug: "435317463"
  is_fixed_read_only: true
}
flag {
  name: "use_rt_mutex"
  namespace: "perfetto"
  description: "Controls whether base::MaybeRtMutex will use base::RtMutex or a standard std::mutex, for reducing priority-inversion in annotated classes"
  bug: "439758665"
  is_fixed_read_only: true
}
flag {
  name: "use_lockfree_taskrunner"
  namespace: "perfetto"
  description: "Controls whether base::MaybeLockFreeTaskRunner will use the battle-tested base::UnixTaskRunner or the new base::UnixTaskRunner"
  bug: "441118768"
  is_fixed_read_only: true
}
flag {
  name: "use_rt_futex"
  namespace: "perfetto"
  description: "Controls whether base::MaybeRtMutex will use base::RtFutex or resolved type of base::MaybeRtMutex for android."
  bug: "443948543"
  is_fixed_read_only: true
}
flag {
  name: "buffer_clone_preserve_read_iter"
  namespace: "perfetto"
  description: "Controls whether TraceBuffer::CloneReadOnly() will preserve the read state (true, new behavior) or clear it (false, legacy behavior)."
  bug: "448604718"
  is_fixed_read_only: true
}
flag {
  name: "sma_prevent_duplicate_immediate_flushes"
  namespace: "perfetto"
  description: "Controls whether SharedMemoryArbiter will prevent posting duplicate immediate flush tasks when the shared memory buffer is more than half full. When enabled, only one immediate flush task is posted until it completes, preventing excessive CPU usage from task runner spam."
  bug: "330580374"
  is_fixed_read_only: true
}
