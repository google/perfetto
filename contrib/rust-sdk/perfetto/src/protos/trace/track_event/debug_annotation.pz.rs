// Copyright (C) 2025 Rivos Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Autogenerated by the ProtoZero Rust compiler plugin.
// Invoked by contrib/rust-sdk/tools/gen_rust_protos
// DO NOT EDIT.

use crate::pb_enum;
use crate::pb_msg;

pb_enum!(NestedValueNestedType {
    UNSPECIFIED: 0,
    DICT: 1,
    ARRAY: 2,
});

pb_msg!(DebugAnnotationValueTypeName {
    iid: u64, primitive, 1,
    name: String, primitive, 2,
});

pb_msg!(DebugAnnotationName {
    iid: u64, primitive, 1,
    name: String, primitive, 2,
});

pb_msg!(DebugAnnotation {
    name_iid: u64, primitive, 1,
    name: String, primitive, 10,
    bool_value: bool, primitive, 2,
    uint_value: u64, primitive, 3,
    int_value: i64, primitive, 4,
    double_value: f64, primitive, 5,
    pointer_value: u64, primitive, 7,
    nested_value: NestedValue, msg, 8,
    legacy_json_value: String, primitive, 9,
    string_value: String, primitive, 6,
    string_value_iid: u64, primitive, 17,
    proto_type_name: String, primitive, 16,
    proto_type_name_iid: u64, primitive, 13,
    proto_value: String, primitive, 14,
    dict_entries: DebugAnnotation, msg, 11,
    array_values: DebugAnnotation, msg, 12,
});

pb_msg!(NestedValue {
    nested_type: NestedValueNestedType, enum, 1,
    dict_keys: String, primitive, 2,
    dict_values: NestedValue, msg, 3,
    array_values: NestedValue, msg, 4,
    int_value: i64, primitive, 5,
    double_value: f64, primitive, 6,
    bool_value: bool, primitive, 7,
    string_value: String, primitive, 8,
});
